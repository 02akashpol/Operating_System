Q1.Explore the following commands with various options, refer man pages for 
    further help a) date b) cal c) bc d) echo e) who f) whoami g) logname g) uname h)
    seq i) clear
=>
a) date : 
 
date
Mon Sep  7 20:02:23 IST 2020

date +%a
Mon

date +%A
Monday

date +%b
Sep

date +%B
September

date +%y
20

Date +%Y // 	invalid syntax

date +%Y
2020

date +%c
Mon Sep  7 20:03:54 2020

date +%C
20

date +%d
07

date +%D
09/07/20

date +%f
%f // op

date +%F
2020-09-07

date +%T
20:05:28

date +%D' '+%B' '+%Y  // we have to use '+' only once   
09/07/20 +September +2020

date +%d/%B/%Y
07/September/2020

b) cal : 

cal  // command
   September 2020
Su Mo Tu We Th Fr Sa
       1  2  3  4  5
 6  7  8  9 10 11 12
13 14 15 16 17 18 19
20 21 22 23 24 25 26
27 28 29 30

cal -m1 2020  // comm
    January 2020
Su Mo Tu We Th Fr Sa
          1  2  3  4
 5  6  7  8  9 10 11
12 13 14 15 16 17 18
19 20 21 22 23 24 25
26 27 28 29 30 31

cal 01 2020  // comm
    January 2020
Su Mo Tu We Th Fr Sa
          1  2  3  4
 5  6  7  8  9 10 11
12 13 14 15 16 17 18
19 20 21 22 23 24 25
26 27 28 29 30 31

cal 2020 
// it will print the whole year of 2020.


c) bc // basic calculator

echo "2^2" | bc // comm
4  // op

echo "3+5" | bc // comm
8

echo "var=10; var" | bc // comm
10

x=`echo "var=100; var+=100; var" | bc` // comm
echo $x  // comm
200  // op

echo "var1 = 10; var2 = 20; ++var1; ++var2;" | bc  // comm
11
21

echo "var1 = 10; var2 = 20; var1++; var2++;" | bc  // comm
10
20

echo "1 < 2" | bc // comm
1

echo "1 > 2" | bc
0

echo "1 && 2" | bc
1

echo "0 && 2" | bc
0

echo "0 || 2" | bc
1

echo "! 0" | bc
1

d) echo : // used in above queries

e) who : who command is used to find out the following information :
1. Time of last system boot
2. Current run level of the system
3. List of logged in users and more.

w  // comm
 22:07:52 up  5:02,  0 users,  load average: 0.52, 0.58, 0.59
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT

f) whoami 

whoami
akashpol

g) logname : 

logname
logname: no login name

h) uname : 

uname
Linux

i) seq : seq command in Linux is used to generate numbers from 
FIRST to LAST in steps of INCREMENT. It is a very useful command 
where we had to generate list of numbers in while, for, until loop.

seq 10 2 20  // comm
10
12
14
16
18
20

seq 5 // comm
1
2
3
4
5

seq 2 5  // comm
2
3
4
5

j) clear : it will clear the screen.


Q2. A) Create three directory a b and c and create a.txt,b.txt and c.txt
    in each directory respectively and then copy c directory into the a.
    
    B)Move Directory b to c.

    C)Create alias of ls -lh command to your name.

    D)Change Directory name a to cdac.

=> 

A) // Text from below lines are commands
 
mkdir a b c

cd a
touch a.txt
cd ..

cd b
touch b.txt
cd ..

cd c
touch c.txt
cd ..

$ cat > c.txt
c file content!

cp -r c a

B) mv b c

C) alias akash='ls -lh'


Q3. A) Create five files file1.txt , file2.txt ,file3.txt file4.txt and
    file5.txt with some text inside it. Search for 's' character
    inside all the files using grep command.
    Also Use cat to view all file content together.
	B)Create file.txt using cat and edit that using nano editor.
	c)Create 5 empty files using touch command
	D)Remove previously created directory a , b and c.
=>

A) 

cat file1.txt
file1 content.

cat > file2.txt
file2 contents.

cat > file3.txt
file3 content.

cat > file4.txt
file4 content.

cat > file5.txt
file5 content.

grep 's' file[1-5].txt
file2.txt:file2 contents.

cat file?.txt
file1 content.
file2 contents.
file3 content.
file4 content.
file5 content.

B)
nano file.txt
cat file.txt
/*
file content.
edited by using nano apk.
*/

C)
touch demo1.txt demo2.txt demo3.txt demo4.txt demo5.txt

D)
rm -rf a c


Q4. Create a file with some content using vi editor
	a) Display the file using cat command
	b) Display line numbers along with content
	c) Display the file in reverse order using tac
	d) Combine multiple files using cat command
=>

a) cat > file.txt // comm
file content.  // inside file

b)  cat -n file.txt // comm
     1  file content.

c)  tac file.txt

d) cat file1.txt file2.txt


Q5. Create Random some files and sub directories.
	a) display files row wise, column wise, 1 per row
	b) sort the files in ascending, descending order
	c) Create some hidden files and sub directories and display them using “ls -a”
	d) Change time stamp of some files and directories using touch command and display the files using ls -t ls -rt
	e) Recursive display contents of your home directory.
	f) display all attributes of files and directories using ls -l
	g) display attributes of a directory using ls -ld

=>

c) mkdir .demo

ls -a

d)
 stat demo1.txt
/*  File: demo1.txt
  Size: 0               Blocks: 0          IO Block: 512    regular empty file
Device: eh/14d  Inode: 15762598695832129  Links: 1
Access: (0777/-rwxrwxrwx)  Uid: ( 1000/akashpol)   Gid: ( 1000/akashpol)
Access: 2020-09-07 23:58:30.564867000 +0530
Modify: 2020-09-07 23:58:30.564867000 +0530
Change: 2020-09-07 23:58:30.564867000 +0530 */

touch -a demo1.txt 

stat demo1.txt
/*  File: demo1.txt
  Size: 0               Blocks: 0          IO Block: 512    regular empty file
Device: eh/14d  Inode: 15762598695832129  Links: 1
Access: (0777/-rwxrwxrwx)  Uid: ( 1000/akashpol)   Gid: ( 1000/akashpol)
Access: 2020-09-08 16:20:21.597096200 +0530
Modify: 2020-09-07 23:58:30.564867000 +0530
Change: 2020-09-08 16:20:21.597096200 +0530
 Birth: - */

e) ls -r

f) ls -l

g) ls -ld


------------------------------------------------------------------------------------

Q1. Create directory of your name and then create 4 files inside it named
	a.txt, b.txt, c.txt and d.sh. And change the directory permission to
	only user and also files permission to only user such that
		a)user can read and write the file a.txt and b.txt
		b)user can write the file c.txt
		c)user can exectuable the file d.sh. Make
			Contents of file d.sh:
			#/bin/sh
			ls -lh
=>

 sudo chmod -R -u+rwx akash

a) chmod -u+rw a.txt b.txt (or) chmod -u-x a.txt b.txt
  
b) chmod -u+w c.txt (or) chmod -u-rx c.txt

c) chmod -u-r d.sh


Q2. Change the permission of the previous directory to executable only.
	Analyze the output.
=>
sudo chmod -R -u+x akash

Q3. Use echo to list the all files of your home directory.

=>
echo *

Q4. Use echo to append your name to a.txt 
=>
echo "content added by echo" >> demo1.txt

  


